Вставка: Как вы заметили, вставка в первое дерево (со случайной последовательностью) проходит гораздо быстрее, чем во второе дерево (с отсортированными элементами). Это происходит именно из-за того, что при вставке в отсортированном порядке дерево становится крайне несбалансированным, что существенно замедляет процесс вставки.
Поиск: Несмотря на то, что дерево со случайной последовательностью лучше сбалансировано, поиск всё равно может занимать больше времени, чем в почти "линейном" дереве, которое получается при вставке отсортированных значений. Однако разница здесь будет меньше, чем при вставке.
Удаление: Здесь ситуация аналогична вставке — удаление в сильно несбалансированном дереве потребует больше времени, так как придётся пройти длинную цепочку узлов для нахождения и удаления нужных элементов.
Рекомендации
Для улучшения производительности вставки и поиска в случае отсортированных данных можно использовать самобалансирующиеся деревья, такие как AVL-дерево или красно-чёрное дерево. Эти структуры поддерживают балансировку автоматически, что предотвращает деградацию производительности даже при вставке отсортированных данных.